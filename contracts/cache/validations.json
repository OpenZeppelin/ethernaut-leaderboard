{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "f54c6538dfc24f7de21447b01c581eac4a81412141d3e7d64c6e852363a03f9c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "ce01b305d59ab0fc33f49899530c7016250aff2483569e2a5f32734029378916",
          "withoutMetadata": "ce01b305d59ab0fc33f49899530c7016250aff2483569e2a5f32734029378916",
          "linkedWithoutMetadata": "ce01b305d59ab0fc33f49899530c7016250aff2483569e2a5f32734029378916"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:29",
        "version": {
          "withMetadata": "9d3d5c2fa603769e3c1bd0fa098007ed7807b2e2b2c67dee09c235ec93c0cfdb",
          "withoutMetadata": "9d3d5c2fa603769e3c1bd0fa098007ed7807b2e2b2c67dee09c235ec93c0cfdb",
          "linkedWithoutMetadata": "9d3d5c2fa603769e3c1bd0fa098007ed7807b2e2b2c67dee09c235ec93c0cfdb"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:34"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "57535e890fc2922ce32cb0ab00d644a860e066de59edbee689a0e8bec7a97f5f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "b58085c00440c371727052c63341dc3b798e0b6e881bc2393b56084ad7c9ce01",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/Ethernaut.sol:Ethernaut": {
        "src": "contracts/Ethernaut.sol:30",
        "version": {
          "withMetadata": "607abfb0f1f0706b86c6208a643acc40cadc7277259924abdf059c45a7c80051",
          "withoutMetadata": "05767f743f55b0b09fee2cb3eb97d79fdf22afccb206718e29e98051f862d6b2",
          "linkedWithoutMetadata": "05767f743f55b0b09fee2cb3eb97d79fdf22afccb206718e29e98051f862d6b2"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "registerLevel(address)",
          "setStatistics(address)",
          "createLevelInstance(address)",
          "submitLevelInstance(address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "statistics",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IStatistics)1554",
              "contract": "Ethernaut",
              "src": "contracts/Ethernaut.sol:31"
            },
            {
              "label": "registeredLevels",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Ethernaut",
              "src": "contracts/Ethernaut.sol:37"
            },
            {
              "label": "emittedInstances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(EmittedInstanceData)1612_storage)",
              "contract": "Ethernaut",
              "src": "contracts/Ethernaut.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IStatistics)1554": {
              "label": "contract IStatistics",
              "numberOfBytes": "20"
            },
            "t_contract(Level)7986": {
              "label": "contract Level",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EmittedInstanceData)1612_storage)": {
              "label": "mapping(address => struct Ethernaut.EmittedInstanceData)",
              "numberOfBytes": "32"
            },
            "t_struct(EmittedInstanceData)1612_storage": {
              "label": "struct Ethernaut.EmittedInstanceData",
              "members": [
                {
                  "label": "player",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_contract(Level)7986",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/Ethernaut.sol:IStatistics": {
        "src": "contracts/Ethernaut.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "saveNewLevel(address)",
          "createNewInstance(address,address,address)",
          "submitFailure(address,address,address)",
          "submitSuccess(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/CoinFlipAttack.sol:CoinFlipAttack": {
        "src": "contracts/attacks/CoinFlipAttack.sol:7",
        "version": {
          "withMetadata": "f138076c2030ad1b5ae701f2c945516c2a81ccfdf98856f080c2d12905cd610c",
          "withoutMetadata": "0aff7d81a3917509ab886cfd383561988cc54579f9de8728fbf7d9cc3e0078cc",
          "linkedWithoutMetadata": "0aff7d81a3917509ab886cfd383561988cc54579f9de8728fbf7d9cc3e0078cc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "attack(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "FACTOR",
            "src": "contracts/attacks/CoinFlipAttack.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "FACTOR",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CoinFlipAttack",
              "src": "contracts/attacks/CoinFlipAttack.sol:8"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/DenialAttack.sol:DenialAttack": {
        "src": "contracts/attacks/DenialAttack.sol:5",
        "version": {
          "withMetadata": "543642c5a908dc5c6e087c3348aa26da612e015844e8d5798f868c0b75854159",
          "withoutMetadata": "fa5b2444a3922ec3c04e07ab0c63ce489600b5baf383d03efde576b2e86fe7ce",
          "linkedWithoutMetadata": "fa5b2444a3922ec3c04e07ab0c63ce489600b5baf383d03efde576b2e86fe7ce"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/DetectionBot.sol:DetectionBot": {
        "src": "contracts/attacks/DetectionBot.sol:14",
        "version": {
          "withMetadata": "e9d6dbd0cb547208f93e0463917f2261b94f21792870b4a49fd463d43638f401",
          "withoutMetadata": "15bcb96c126640eec468e2ca69d2144c0a706ef78697ff04c350ad70de77888e",
          "linkedWithoutMetadata": "15bcb96c126640eec468e2ca69d2144c0a706ef78697ff04c350ad70de77888e"
        },
        "inherit": [
          "contracts/attacks/DetectionBot.sol:IDetectionBot"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "handleTransaction(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DetectionBot",
            "src": "contracts/attacks/DetectionBot.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "fortaContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IForta)1879",
              "contract": "DetectionBot",
              "src": "contracts/attacks/DetectionBot.sol:16"
            }
          ],
          "types": {
            "t_contract(IForta)1879": {
              "label": "contract IForta",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/DetectionBot.sol:IDetectionBot": {
        "src": "contracts/attacks/DetectionBot.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "handleTransaction(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/DetectionBot.sol:IForta": {
        "src": "contracts/attacks/DetectionBot.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDetectionBot(address)",
          "notify(address,bytes)",
          "raiseAlert(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/DexTwoAttack.sol:DexTwoAttackToken": {
        "src": "contracts/attacks/DexTwoAttack.sol:4",
        "version": {
          "withMetadata": "5ceb6a9c4b02f0baae17aa9c01dfd313cbde2d855ea5270795707ba74f822187",
          "withoutMetadata": "be654cc3966b78c2060091d8d45701166ffe43dc6821c3b25fe1bb988d4a85db",
          "linkedWithoutMetadata": "be654cc3966b78c2060091d8d45701166ffe43dc6821c3b25fe1bb988d4a85db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/ElevatorAttack.sol:ElevatorAttack": {
        "src": "contracts/attacks/ElevatorAttack.sol:7",
        "version": {
          "withMetadata": "cbc034e1b4b5c32bffd3464a6733c3b872b94276f9c89387bfd88916d2b34e49",
          "withoutMetadata": "19328ce4b16e7e56c47328552d96a332dffbecffd50f9e86c5faee92fbf5bb05",
          "linkedWithoutMetadata": "19328ce4b16e7e56c47328552d96a332dffbecffd50f9e86c5faee92fbf5bb05"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isLastFloor(uint256)",
          "attack(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "isLast",
            "src": "contracts/attacks/ElevatorAttack.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "isLast",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ElevatorAttack",
              "src": "contracts/attacks/ElevatorAttack.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/ForceAttack.sol:ForceAttack": {
        "src": "contracts/attacks/ForceAttack.sol:5",
        "version": {
          "withMetadata": "b7cddd765faaf042a94c47fe11cca2f5c48c2b69cef91f2a06d68852a176d659",
          "withoutMetadata": "9ddc854b24d12e94bb745bc0c127e74b4ad87f4ddcaf17d5ed83577aed579135",
          "linkedWithoutMetadata": "9ddc854b24d12e94bb745bc0c127e74b4ad87f4ddcaf17d5ed83577aed579135"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "attack(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/attacks/ForceAttack.sol:11"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/GatekeeperOneAttack.sol:GatekeeperOneAttack": {
        "src": "contracts/attacks/GatekeeperOneAttack.sol:5",
        "version": {
          "withMetadata": "b00347289596c58bcb0efa99668b591ee210f6c870a3ce59b84a752f3b785287",
          "withoutMetadata": "992eddba43f3061d47584c4d52fe2ca9f50a41c66817300783aa3232f542ac70",
          "linkedWithoutMetadata": "992eddba43f3061d47584c4d52fe2ca9f50a41c66817300783aa3232f542ac70"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GatekeeperOneAttack",
            "src": "contracts/attacks/GatekeeperOneAttack.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/GatekeeperThreeAttack.sol:GatekeeperThreeAttack": {
        "src": "contracts/attacks/GatekeeperThreeAttack.sol:6",
        "version": {
          "withMetadata": "f566975df755832fa9ebb3a910b255423e8315414200177f9b9f0d367e05a0f8",
          "withoutMetadata": "1fe7f144eed438da7be776c9ba142296f96598ea321bbaafb0f0c419f72007d6",
          "linkedWithoutMetadata": "1fe7f144eed438da7be776c9ba142296f96598ea321bbaafb0f0c419f72007d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "HackFirst()",
          "HackTwo(uint256)",
          "HackAll()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GatekeeperThreeAttack",
            "src": "contracts/attacks/GatekeeperThreeAttack.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "target",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(GatekeeperThree)5495",
              "contract": "GatekeeperThreeAttack",
              "src": "contracts/attacks/GatekeeperThreeAttack.sol:7"
            },
            {
              "label": "trick",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "GatekeeperThreeAttack",
              "src": "contracts/attacks/GatekeeperThreeAttack.sol:8"
            },
            {
              "label": "password",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GatekeeperThreeAttack",
              "src": "contracts/attacks/GatekeeperThreeAttack.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(GatekeeperThree)5495": {
              "label": "contract GatekeeperThree",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/GatekeeperTwoAttack.sol:GatekeeperTwoAttack": {
        "src": "contracts/attacks/GatekeeperTwoAttack.sol:9",
        "version": {
          "withMetadata": "5eefcebfc07824ea1bd94e3aa0fe99b8303d5cba67f2e3235ec5dd7a355504f0",
          "withoutMetadata": "4c2e8383ab93bbc812b3368546af77bab68a781f4e57c966aa576318e092cd09",
          "linkedWithoutMetadata": "4c2e8383ab93bbc812b3368546af77bab68a781f4e57c966aa576318e092cd09"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GatekeeperTwoAttack",
            "src": "contracts/attacks/GatekeeperTwoAttack.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "gatekeeper",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(GatekeeperTwoInterface)2184",
              "contract": "GatekeeperTwoAttack",
              "src": "contracts/attacks/GatekeeperTwoAttack.sol:11"
            }
          ],
          "types": {
            "t_contract(GatekeeperTwoInterface)2184": {
              "label": "contract GatekeeperTwoInterface",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/GatekeeperTwoAttack.sol:GatekeeperTwoInterface": {
        "src": "contracts/attacks/GatekeeperTwoAttack.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enter(bytes8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/GoodSamaritanAttack.sol:GoodSamaritanAttack": {
        "src": "contracts/attacks/GoodSamaritanAttack.sol:9",
        "version": {
          "withMetadata": "c824ffd8f3b818d03ae1246ba3a3c9444822df583ee4a365855f6adf4f4d86d1",
          "withoutMetadata": "57e0a5ed1c826b9416bb4b20f85389770e4ce5ca7a48c4faa467485e456bf703",
          "linkedWithoutMetadata": "57e0a5ed1c826b9416bb4b20f85389770e4ce5ca7a48c4faa467485e456bf703"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "attack()",
          "notify(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GoodSamaritanAttack",
            "src": "contracts/attacks/GoodSamaritanAttack.sol:12"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_goodSamaritan",
            "src": "contracts/attacks/GoodSamaritanAttack.sol:10"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/KingAttack.sol:KingAttack": {
        "src": "contracts/attacks/KingAttack.sol:5",
        "version": {
          "withMetadata": "5be710ec817de4f7ab9da8485403f3cfa1f5060318c60067ed02583b750798f4",
          "withoutMetadata": "baf34c8a20401647939f5b13a56c5884f4ac1ae5d0a6b5ac1dcd98cb1b075360",
          "linkedWithoutMetadata": "baf34c8a20401647939f5b13a56c5884f4ac1ae5d0a6b5ac1dcd98cb1b075360"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "doYourThing(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/MagicNumBadSolver.sol:MagicNumBadSolver": {
        "src": "contracts/attacks/MagicNumBadSolver.sol:5",
        "version": {
          "withMetadata": "7c7932cb9a278784d3875a21b686471996378b0e8e84ba1a398c8e05248fc5e8",
          "withoutMetadata": "db5cbf952c8a73caca483ab34f34105ccf0ae15256756fb5d0a3df708c502ab3",
          "linkedWithoutMetadata": "db5cbf952c8a73caca483ab34f34105ccf0ae15256756fb5d0a3df708c502ab3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "whatIsTheMeaningOfLife()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/MagicNumSolver.sol:MagicNumSolver": {
        "src": "contracts/attacks/MagicNumSolver.sol:5",
        "version": {
          "withMetadata": "0fa67c6037ca0cb6e9cf82c820289f23d2e91b8a89cdc250648059e105fda9ea",
          "withoutMetadata": "0fa67c6037ca0cb6e9cf82c820289f23d2e91b8a89cdc250648059e105fda9ea",
          "linkedWithoutMetadata": "0fa67c6037ca0cb6e9cf82c820289f23d2e91b8a89cdc250648059e105fda9ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MagicNumSolver",
            "src": "contracts/attacks/MagicNumSolver.sol:6"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/Manufactured.sol:Manufactured": {
        "src": "contracts/attacks/Manufactured.sol:7",
        "version": {
          "withMetadata": "ec77fbea4be9a6bfbe85ba865cfd606cd1e738303c2ff5d1c0ad0c57edbde2e9",
          "withoutMetadata": "fd35244c6814cc307c42117a56a331ff7eb158538454de3c33cb9f792530638d",
          "linkedWithoutMetadata": "fd35244c6814cc307c42117a56a331ff7eb158538454de3c33cb9f792530638d"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/NaughtCoinAttack.sol:NaughtCoinAttack": {
        "src": "contracts/attacks/NaughtCoinAttack.sol:7",
        "version": {
          "withMetadata": "9979e2d81da14c1d2c23d7bfa3a443814c3ab146b13e7aa73ff90526a49f4ed3",
          "withoutMetadata": "95d26e2714f5c7369e90882a6bcd1c589d8b9e62eed6a775384f526ae7fb5136",
          "linkedWithoutMetadata": "95d26e2714f5c7369e90882a6bcd1c589d8b9e62eed6a775384f526ae7fb5136"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "attack(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/PreservationAttack.sol:PreservationAttack": {
        "src": "contracts/attacks/PreservationAttack.sol:5",
        "version": {
          "withMetadata": "60ffa33621d6605e9b2ae977c2ef91c0c0eacfc037e82d09791087b21d04f2a8",
          "withoutMetadata": "7ce490661e7a4ca883bb051d8890237bdc894ea771e8d0ef61c3ad74f11dafbf",
          "linkedWithoutMetadata": "7ce490661e7a4ca883bb051d8890237bdc894ea771e8d0ef61c3ad74f11dafbf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PreservationAttack",
              "src": "contracts/attacks/PreservationAttack.sol:7"
            },
            {
              "label": "slot1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PreservationAttack",
              "src": "contracts/attacks/PreservationAttack.sol:8"
            },
            {
              "label": "ownerSlot",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PreservationAttack",
              "src": "contracts/attacks/PreservationAttack.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/ShopAttack.sol:ShopAttack": {
        "src": "contracts/attacks/ShopAttack.sol:7",
        "version": {
          "withMetadata": "a8c3782d3ab4a1de069f67afe82b3428e319c362a3b9219179f488936aa23e93",
          "withoutMetadata": "603d1893b224a22ed0507c22b8d38973c0c726818852f3fe50a32d05c83c13de",
          "linkedWithoutMetadata": "603d1893b224a22ed0507c22b8d38973c0c726818852f3fe50a32d05c83c13de"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "price()",
          "attack(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/TelephoneAttack.sol:TelephoneAttack": {
        "src": "contracts/attacks/TelephoneAttack.sol:7",
        "version": {
          "withMetadata": "5902121002aa3c310e66e0be6d25f6cbe883fb9a77f574c045afddc8eb2f50af",
          "withoutMetadata": "227075a7f9f7cd9af56cfca9411bb5882b554a99e0c394e4359ba7f887c1cc13",
          "linkedWithoutMetadata": "227075a7f9f7cd9af56cfca9411bb5882b554a99e0c394e4359ba7f887c1cc13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "attack(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/attacks/VaultAttack.sol:VaultAttack": {
        "src": "contracts/attacks/VaultAttack.sol:7",
        "version": {
          "withMetadata": "c5df4aba8cae445e31cce9b3a13ab535ea4b2418d083271f6b357274050462b8",
          "withoutMetadata": "8a2eac616ebf2cd7ad9b02eff4b1c35f60288e51f087b57395bc1bcf57d4cefa",
          "linkedWithoutMetadata": "8a2eac616ebf2cd7ad9b02eff4b1c35f60288e51f087b57395bc1bcf57d4cefa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "attack(address,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/factory/LocalFactory.sol:Factory": {
        "src": "contracts/factory/LocalFactory.sol:12",
        "version": {
          "withMetadata": "190b96debb53d9049fda1b72a52582c1aa19b4cd5fc157ebdd63f353a91ddbcb",
          "withoutMetadata": "190b96debb53d9049fda1b72a52582c1aa19b4cd5fc157ebdd63f353a91ddbcb",
          "linkedWithoutMetadata": "190b96debb53d9049fda1b72a52582c1aa19b4cd5fc157ebdd63f353a91ddbcb"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "registerLevel(address)",
          "transferContractsOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Factory",
            "src": "contracts/factory/LocalFactory.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "ethernaut",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Ethernaut)1778",
              "contract": "Factory",
              "src": "contracts/factory/LocalFactory.sol:13"
            },
            {
              "label": "proxyAdmin",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyAdmin)9064",
              "contract": "Factory",
              "src": "contracts/factory/LocalFactory.sol:14"
            },
            {
              "label": "implementation",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Statistics)8928",
              "contract": "Factory",
              "src": "contracts/factory/LocalFactory.sol:15"
            },
            {
              "label": "proxyStats",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ProxyStats)9089",
              "contract": "Factory",
              "src": "contracts/factory/LocalFactory.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Ethernaut)1778": {
              "label": "contract Ethernaut",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyAdmin)9064": {
              "label": "contract ProxyAdmin",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyStats)9089": {
              "label": "contract ProxyStats",
              "numberOfBytes": "20"
            },
            "t_contract(Statistics)8928": {
              "label": "contract Statistics",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/helpers/UpgradeableProxy-08.sol:UpgradeableProxy": {
        "src": "contracts/helpers/UpgradeableProxy-08.sol:18",
        "version": {
          "withMetadata": "85c7756273b612e068767385a3f3c4cffd7c46d56e3370c69494495ae07a285c",
          "withoutMetadata": "85c7756273b612e068767385a3f3c4cffd7c46d56e3370c69494495ae07a285c",
          "linkedWithoutMetadata": "85c7756273b612e068767385a3f3c4cffd7c46d56e3370c69494495ae07a285c"
        },
        "inherit": [
          "openzeppelin-contracts-08/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "openzeppelin-contracts-08/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "contracts/helpers/UpgradeableProxy-08.sol:25"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/helpers/UpgradeableProxy-08.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/CoinFlip.sol:CoinFlip": {
        "src": "contracts/levels/CoinFlip.sol:4",
        "version": {
          "withMetadata": "f0a9d27c34edd179d46d10fc95667e253069d228c9775b9868b903586aa907be",
          "withoutMetadata": "54e37a2915c1c53d3c0aefd7612984a13fac76d7e1ad36e8c41d4f1246676165",
          "linkedWithoutMetadata": "54e37a2915c1c53d3c0aefd7612984a13fac76d7e1ad36e8c41d4f1246676165"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "flip(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/levels/CoinFlip.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FACTOR",
            "src": "contracts/levels/CoinFlip.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "consecutiveWins",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/levels/CoinFlip.sol:6"
            },
            {
              "label": "lastHash",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/levels/CoinFlip.sol:7"
            },
            {
              "label": "FACTOR",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/levels/CoinFlip.sol:8"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/CoinFlipFactory.sol:CoinFlipFactory": {
        "src": "contracts/levels/CoinFlipFactory.sol:8",
        "version": {
          "withMetadata": "c9f3601a9ff5c6c2e73f3082e0d9b6e0382b7dec08e1837006db9d336bd229d4",
          "withoutMetadata": "dc462e5cbe5eafe322e8e695c5fd9efbce2583e0d9a817c2bb4bcf711921f6f9",
          "linkedWithoutMetadata": "dc462e5cbe5eafe322e8e695c5fd9efbce2583e0d9a817c2bb4bcf711921f6f9"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Delegation.sol:Delegate": {
        "src": "contracts/levels/Delegation.sol:4",
        "version": {
          "withMetadata": "3939ffff63a76cfc6492f25b3c2ed2a6eac86cb607202ff7bb768ee64242d22c",
          "withoutMetadata": "92635d6ce39697fd0afd03680fd683d0317362201ea2bd761d006b55d22a3f52",
          "linkedWithoutMetadata": "92635d6ce39697fd0afd03680fd683d0317362201ea2bd761d006b55d22a3f52"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "pwn()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Delegate",
            "src": "contracts/levels/Delegation.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Delegate",
              "src": "contracts/levels/Delegation.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Delegation.sol:Delegation": {
        "src": "contracts/levels/Delegation.sol:17",
        "version": {
          "withMetadata": "990900a91ea04948fcc29449bf95fbc63c4986331ca20e91d7b3dac1847689cf",
          "withoutMetadata": "cf15d67e3b530f257f161e8e934713b6764dfc0acf571ea5499cdf4f4959c5db",
          "linkedWithoutMetadata": "cf15d67e3b530f257f161e8e934713b6764dfc0acf571ea5499cdf4f4959c5db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Delegation",
            "src": "contracts/levels/Delegation.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/levels/Delegation.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Delegation",
              "src": "contracts/levels/Delegation.sol:19"
            },
            {
              "label": "delegate",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Delegate)2871",
              "contract": "Delegation",
              "src": "contracts/levels/Delegation.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Delegate)2871": {
              "label": "contract Delegate",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DelegationFactory.sol:DelegationFactory": {
        "src": "contracts/levels/DelegationFactory.sol:8",
        "version": {
          "withMetadata": "c478e9211c8211b117291311482b65649a3bdda3d2d1547448c4c5fb559969fc",
          "withoutMetadata": "810f9a133a8385f7b9c05ced6b6a4d69925c1ea484415d9004642b7f34240ff9",
          "linkedWithoutMetadata": "810f9a133a8385f7b9c05ced6b6a4d69925c1ea484415d9004642b7f34240ff9"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DelegationFactory",
            "src": "contracts/levels/DelegationFactory.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "delegateAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DelegationFactory",
              "src": "contracts/levels/DelegationFactory.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Denial.sol:Denial": {
        "src": "contracts/levels/Denial.sol:3",
        "version": {
          "withMetadata": "0e468aea2004ceb34d4218a8bd98c1a762747faccfce163d7b76bc3a0a822524",
          "withoutMetadata": "1596eeb4e71c4bd1b5a4518f5517d485de4890589950dbaf963662a9739c8eaa",
          "linkedWithoutMetadata": "1596eeb4e71c4bd1b5a4518f5517d485de4890589950dbaf963662a9739c8eaa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setWithdrawPartner(address)",
          "withdraw()",
          "()",
          "contractBalance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "partner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Denial",
              "src": "contracts/levels/Denial.sol:5"
            },
            {
              "label": "timeLastWithdrawn",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Denial",
              "src": "contracts/levels/Denial.sol:7"
            },
            {
              "label": "withdrawPartnerBalances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Denial",
              "src": "contracts/levels/Denial.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DenialFactory.sol:DenialFactory": {
        "src": "contracts/levels/DenialFactory.sol:8",
        "version": {
          "withMetadata": "00b662dc9f60b4852e3e263ea9b8b4f1d5f9ceb4ba1a3beed4a66d4af88a20d5",
          "withoutMetadata": "01c9f90923681ab018889f1e364326113ae0005bc84071e22d145ea25b94e589",
          "linkedWithoutMetadata": "01c9f90923681ab018889f1e364326113ae0005bc84071e22d145ea25b94e589"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialDeposit",
            "src": "contracts/levels/DenialFactory.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "initialDeposit",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DenialFactory",
              "src": "contracts/levels/DenialFactory.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Dex.sol:Dex": {
        "src": "contracts/levels/Dex.sol:8",
        "version": {
          "withMetadata": "d403d0fcb30842bed703295cd9f4aadfb8ff10788155a24d46cc02006ffbc762",
          "withoutMetadata": "45c082610b15a3414a960196f8608f1c0211a297939010fd07be4a99d62796b1",
          "linkedWithoutMetadata": "45c082610b15a3414a960196f8608f1c0211a297939010fd07be4a99d62796b1"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setTokens(address,address)",
          "addLiquidity(address,uint256)",
          "swap(address,address,uint256)",
          "getSwapPrice(address,address,uint256)",
          "approve(address,uint256)",
          "balanceOf(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Dex",
              "src": "contracts/levels/Dex.sol:9"
            },
            {
              "label": "token2",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Dex",
              "src": "contracts/levels/Dex.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Dex.sol:SwappableToken": {
        "src": "contracts/levels/Dex.sol:45",
        "version": {
          "withMetadata": "a58dcea90d69bc09dc0bd35312e953de7a7d413afde8876b7dc94e2051f94ae3",
          "withoutMetadata": "0eab3ec67fa143ba0c9b3209fd961178eddcb20300244f8d7f63d8410043fc5a",
          "linkedWithoutMetadata": "0eab3ec67fa143ba0c9b3209fd961178eddcb20300244f8d7f63d8410043fc5a"
        },
        "inherit": [
          "openzeppelin-contracts-08/token/ERC20/ERC20.sol:ERC20",
          "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,string,string,uint256)",
          "approve(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwappableToken",
            "src": "contracts/levels/Dex.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_dex",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SwappableToken",
              "src": "contracts/levels/Dex.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DexFactory.sol:DexFactory": {
        "src": "contracts/levels/DexFactory.sol:10",
        "version": {
          "withMetadata": "2a3f16216f9ba5a1714ba4391dcf1aaa1a1a3e001d29cca94e33b9ce1e989ce9",
          "withoutMetadata": "95e7e32b4380a2eec83c51f99135a2acf2a3e3abbc7df572ac527a7bde5b277d",
          "linkedWithoutMetadata": "95e7e32b4380a2eec83c51f99135a2acf2a3e3abbc7df572ac527a7bde5b277d"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DexTwo.sol:DexTwo": {
        "src": "contracts/levels/DexTwo.sol:8",
        "version": {
          "withMetadata": "d7f99d585d8052a7939c5113d697d895da6df0e730af436b9a845bb70a82f66c",
          "withoutMetadata": "4c5b31a4fe6140c8be36eb0c7b2ead25d0aa121174c1dfad88ab99b5bdae12e9",
          "linkedWithoutMetadata": "4c5b31a4fe6140c8be36eb0c7b2ead25d0aa121174c1dfad88ab99b5bdae12e9"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setTokens(address,address)",
          "add_liquidity(address,uint256)",
          "swap(address,address,uint256)",
          "getSwapAmount(address,address,uint256)",
          "approve(address,uint256)",
          "balanceOf(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DexTwo",
              "src": "contracts/levels/DexTwo.sol:9"
            },
            {
              "label": "token2",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "DexTwo",
              "src": "contracts/levels/DexTwo.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DexTwo.sol:SwappableTokenTwo": {
        "src": "contracts/levels/DexTwo.sol:44",
        "version": {
          "withMetadata": "abb4fcca95b7e7ec5160023edf4ed54611ba5780ca4486dcacfacfd296b6e55b",
          "withoutMetadata": "0eab3ec67fa143ba0c9b3209fd961178eddcb20300244f8d7f63d8410043fc5a",
          "linkedWithoutMetadata": "0eab3ec67fa143ba0c9b3209fd961178eddcb20300244f8d7f63d8410043fc5a"
        },
        "inherit": [
          "openzeppelin-contracts-08/token/ERC20/ERC20.sol:ERC20",
          "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,string,string,uint256)",
          "approve(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwappableTokenTwo",
            "src": "contracts/levels/DexTwo.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_dex",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SwappableTokenTwo",
              "src": "contracts/levels/DexTwo.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DexTwoFactory.sol:DexTwoFactory": {
        "src": "contracts/levels/DexTwoFactory.sol:10",
        "version": {
          "withMetadata": "81a30930c415749335d893c89e38ad9e450b865a4a0ee6a9c608d33ac58e67ea",
          "withoutMetadata": "880f8677f6072646eabc8692976e557616f14b916c5c808de16ed98907752742",
          "linkedWithoutMetadata": "880f8677f6072646eabc8692976e557616f14b916c5c808de16ed98907752742"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:CryptoVault": {
        "src": "contracts/levels/DoubleEntryPoint.sol:42",
        "version": {
          "withMetadata": "00d4c0b93d144f7fe3e6051be7da5e750632801abf0e27bbb559c063de47fdf0",
          "withoutMetadata": "c2356bce589b5fde3bf1b8eb4fc9f0d4f5d19b6e0a961380c8a339b4f1e7823a",
          "linkedWithoutMetadata": "c2356bce589b5fde3bf1b8eb4fc9f0d4f5d19b6e0a961380c8a339b4f1e7823a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setUnderlying(address)",
          "sweepToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CryptoVault",
            "src": "contracts/levels/DoubleEntryPoint.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sweptTokensRecipient",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CryptoVault",
              "src": "contracts/levels/DoubleEntryPoint.sol:43"
            },
            {
              "label": "underlying",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)9918",
              "contract": "CryptoVault",
              "src": "contracts/levels/DoubleEntryPoint.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)9918": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:DelegateERC20": {
        "src": "contracts/levels/DoubleEntryPoint.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "delegateTransfer(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:DoubleEntryPoint": {
        "src": "contracts/levels/DoubleEntryPoint.sol:85",
        "version": {
          "withMetadata": "8acbc4e34ac7a065cb41a4173194fe088dd4d607d8af75263cd3a83de499dd7b",
          "withoutMetadata": "89efb15862ff52fb3870b98d14a10e0f3aebd5b6297ec04f60f2c9bf71ca4614",
          "linkedWithoutMetadata": "89efb15862ff52fb3870b98d14a10e0f3aebd5b6297ec04f60f2c9bf71ca4614"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "contracts/levels/DoubleEntryPoint.sol:DelegateERC20",
          "openzeppelin-contracts-08/token/ERC20/ERC20.sol:ERC20",
          "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "delegateTransfer(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DoubleEntryPoint",
            "src": "contracts/levels/DoubleEntryPoint.sol:91"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "cryptoVault",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "DoubleEntryPoint",
              "src": "contracts/levels/DoubleEntryPoint.sol:86"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "DoubleEntryPoint",
              "src": "contracts/levels/DoubleEntryPoint.sol:87"
            },
            {
              "label": "delegatedFrom",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "DoubleEntryPoint",
              "src": "contracts/levels/DoubleEntryPoint.sol:88"
            },
            {
              "label": "forta",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(Forta)4197",
              "contract": "DoubleEntryPoint",
              "src": "contracts/levels/DoubleEntryPoint.sol:89"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Forta)4197": {
              "label": "contract Forta",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:Forta": {
        "src": "contracts/levels/DoubleEntryPoint.sol:21",
        "version": {
          "withMetadata": "3bed18625254648ece2ad944531a6c1d3f22a1a92e75735ee30e28c4ccbcdc36",
          "withoutMetadata": "0f95b72fb686bfdb6e82326d5b31a65bd58d80ccb24b6c92bd4479923ad242f4",
          "linkedWithoutMetadata": "0f95b72fb686bfdb6e82326d5b31a65bd58d80ccb24b6c92bd4479923ad242f4"
        },
        "inherit": [
          "contracts/levels/DoubleEntryPoint.sol:IForta"
        ],
        "libraries": [],
        "methods": [
          "setDetectionBot(address)",
          "notify(address,bytes)",
          "raiseAlert(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "usersDetectionBots",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_contract(IDetectionBot)4091)",
              "contract": "Forta",
              "src": "contracts/levels/DoubleEntryPoint.sol:22"
            },
            {
              "label": "botRaisedAlerts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Forta",
              "src": "contracts/levels/DoubleEntryPoint.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IDetectionBot)4091": {
              "label": "contract IDetectionBot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(IDetectionBot)4091)": {
              "label": "mapping(address => contract IDetectionBot)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:IDetectionBot": {
        "src": "contracts/levels/DoubleEntryPoint.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "handleTransaction(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:IForta": {
        "src": "contracts/levels/DoubleEntryPoint.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDetectionBot(address)",
          "notify(address,bytes)",
          "raiseAlert(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPoint.sol:LegacyToken": {
        "src": "contracts/levels/DoubleEntryPoint.sol:65",
        "version": {
          "withMetadata": "d4f31cc9ecd45f02fbfaf85d06fcf69e4741fd6b63b2d852e031defeb25f5ad8",
          "withoutMetadata": "7f362f4d6e3ab9cc02703a936a089dd8cff120764a0b89fa19b2aba11487c705",
          "linkedWithoutMetadata": "7f362f4d6e3ab9cc02703a936a089dd8cff120764a0b89fa19b2aba11487c705"
        },
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/token/ERC20/ERC20.sol:ERC20",
          "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "delegateToNewContract(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "delegate",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(DelegateERC20)4083",
              "contract": "LegacyToken",
              "src": "contracts/levels/DoubleEntryPoint.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DelegateERC20)4083": {
              "label": "contract DelegateERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DoubleEntryPointFactory.sol:DoubleEntryPointFactory": {
        "src": "contracts/levels/DoubleEntryPointFactory.sol:8",
        "version": {
          "withMetadata": "242e8929a7b6d6220f7e0d7af3087e73c1fcab24c2f94fcf0a4f5fb775bf0a5d",
          "withoutMetadata": "2ae094f4880fec615ab28a7142333088d25db83acd8ae454c0763bbddd5e05ff",
          "linkedWithoutMetadata": "2ae094f4880fec615ab28a7142333088d25db83acd8ae454c0763bbddd5e05ff"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)",
          "__trySweep(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Dummy.sol:Dummy": {
        "src": "contracts/levels/Dummy.sol:4",
        "version": {
          "withMetadata": "50558afaf6a9acf297de5ef271e4b1aaff49c5ad1f3c97fb225b409bbeb4d892",
          "withoutMetadata": "f2fe770739a7fde29003b0ffec5d19f95dc601c95e65af97979f24de0694fcb8",
          "linkedWithoutMetadata": "f2fe770739a7fde29003b0ffec5d19f95dc601c95e65af97979f24de0694fcb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCompleted(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "completed",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Dummy",
              "src": "contracts/levels/Dummy.sol:5"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/DummyFactory.sol:DummyFactory": {
        "src": "contracts/levels/DummyFactory.sol:7",
        "version": {
          "withMetadata": "04df4002ddc8498e4b1cfde81c80b8a84221cd0329370c8cba8f923b93188611",
          "withoutMetadata": "87abfd5671ac01c751315b28dd799244f9238cf005cc720dfb627d872fc92849",
          "linkedWithoutMetadata": "87abfd5671ac01c751315b28dd799244f9238cf005cc720dfb627d872fc92849"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Elevator.sol:Building": {
        "src": "contracts/levels/Elevator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isLastFloor(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Elevator.sol:Elevator": {
        "src": "contracts/levels/Elevator.sol:9",
        "version": {
          "withMetadata": "b3dd748aa5df0204d9569d766e4b48021e7537b41ef46bd158eff854e64b5b26",
          "withoutMetadata": "4eb587adcdfc8e43147752089ec9e81c3ad259ae93bcb3b567894e19b1a2514f",
          "linkedWithoutMetadata": "4eb587adcdfc8e43147752089ec9e81c3ad259ae93bcb3b567894e19b1a2514f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "goTo(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "top",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Elevator",
              "src": "contracts/levels/Elevator.sol:10"
            },
            {
              "label": "floor",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Elevator",
              "src": "contracts/levels/Elevator.sol:11"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/ElevatorFactory.sol:ElevatorFactory": {
        "src": "contracts/levels/ElevatorFactory.sol:8",
        "version": {
          "withMetadata": "a95c66b35689012770d931dd4b3d3c9223c8244ec14a3838e702a69e1f7731a7",
          "withoutMetadata": "bfde3cde018b15936cf4b5756f9e84a4819c8c578af01c3bd720383de2fdb82b",
          "linkedWithoutMetadata": "bfde3cde018b15936cf4b5756f9e84a4819c8c578af01c3bd720383de2fdb82b"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Fallback.sol:Fallback": {
        "src": "contracts/levels/Fallback.sol:4",
        "version": {
          "withMetadata": "9bb16753eb3eff1b004db5d632e67d5c1d6797f649c29f90a7534f3569f42518",
          "withoutMetadata": "590e6274c4da8a70a20328129177ed149f392969c047555885349e6d35bf2a4a",
          "linkedWithoutMetadata": "590e6274c4da8a70a20328129177ed149f392969c047555885349e6d35bf2a4a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "contribute()",
          "getContribution()",
          "withdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Fallback",
            "src": "contracts/levels/Fallback.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "contributions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Fallback",
              "src": "contracts/levels/Fallback.sol:6"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Fallback",
              "src": "contracts/levels/Fallback.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/FallbackFactory.sol:FallbackFactory": {
        "src": "contracts/levels/FallbackFactory.sol:8",
        "version": {
          "withMetadata": "0040fa36ae9704b94c47f8e4f94019f66586a1ed5c92a74054fc896d6e39ca11",
          "withoutMetadata": "d9522a4513b65843fa6c068eb962ef996c0e0ab388673af1f75eeb6ed953f127",
          "linkedWithoutMetadata": "d9522a4513b65843fa6c068eb962ef996c0e0ab388673af1f75eeb6ed953f127"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Force.sol:Force": {
        "src": "contracts/levels/Force.sol:4",
        "version": {
          "withMetadata": "c85eade88b0f008665ca25dbf44f426f55fec9a33021b937ed6c89bb609dc459",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/ForceFactory.sol:ForceFactory": {
        "src": "contracts/levels/ForceFactory.sol:8",
        "version": {
          "withMetadata": "6fb472b862b3f56f06446de714697860818648bb956cd04d8856da2a7907cd19",
          "withoutMetadata": "2f76683e4786e474e1ec591baac1293d4a91fa4b270c265c0abfd211f091f9b1",
          "linkedWithoutMetadata": "2f76683e4786e474e1ec591baac1293d4a91fa4b270c265c0abfd211f091f9b1"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperOne.sol:GatekeeperOne": {
        "src": "contracts/levels/GatekeeperOne.sol:4",
        "version": {
          "withMetadata": "a5bde3362f218cb4bbbd6ef0c3ffb6d397e11f35205272463e00f108fd7eb148",
          "withoutMetadata": "aadec9baadba93d77bf1031de27fc9e5e01b3dfac60510fe9a18698992f9d2ac",
          "linkedWithoutMetadata": "aadec9baadba93d77bf1031de27fc9e5e01b3dfac60510fe9a18698992f9d2ac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "enter(bytes8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "entrant",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GatekeeperOne",
              "src": "contracts/levels/GatekeeperOne.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperOneFactory.sol:GatekeeperOneFactory": {
        "src": "contracts/levels/GatekeeperOneFactory.sol:8",
        "version": {
          "withMetadata": "3f63dda9eba7426849a18b8caaf71332d2d28371b81c2965f9afa1ab4c09129d",
          "withoutMetadata": "32dbebca229b4e7b35105f0b03be155f8ab3f209a18a634933bc4e378e92707f",
          "linkedWithoutMetadata": "32dbebca229b4e7b35105f0b03be155f8ab3f209a18a634933bc4e378e92707f"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperThree.sol:GatekeeperThree": {
        "src": "contracts/levels/GatekeeperThree.sol:32",
        "version": {
          "withMetadata": "24f17369c7f24d736ca9b43ca7f4486cab814cedf64b4ba5207a60a0676d0bc6",
          "withoutMetadata": "7f286f60cef3e3a72c96d162b65afcc1f2748f6b8e9bc38646da2603ae850355",
          "linkedWithoutMetadata": "7f286f60cef3e3a72c96d162b65afcc1f2748f6b8e9bc38646da2603ae850355"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "construct0r()",
          "getAllowance(uint256)",
          "createTrick()",
          "enter()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "allow_enterance",
            "src": "contracts/levels/GatekeeperThree.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GatekeeperThree",
              "src": "contracts/levels/GatekeeperThree.sol:33"
            },
            {
              "label": "entrant",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "GatekeeperThree",
              "src": "contracts/levels/GatekeeperThree.sol:34"
            },
            {
              "label": "allow_enterance",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "GatekeeperThree",
              "src": "contracts/levels/GatekeeperThree.sol:35"
            },
            {
              "label": "trick",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SimpleTrick)5362",
              "contract": "GatekeeperThree",
              "src": "contracts/levels/GatekeeperThree.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SimpleTrick)5362": {
              "label": "contract SimpleTrick",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperThree.sol:SimpleTrick": {
        "src": "contracts/levels/GatekeeperThree.sol:4",
        "version": {
          "withMetadata": "926d4a05f72711c9a164bef29534dd0b47d04a12bb99ecb0af26800b92e6de43",
          "withoutMetadata": "262c9c605c65f7602c061c8445bcd6ac594500b7aa6ad85f38d336bb144913d5",
          "linkedWithoutMetadata": "262c9c605c65f7602c061c8445bcd6ac594500b7aa6ad85f38d336bb144913d5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "checkPassword(uint256)",
          "trickInit()",
          "trickyTrick()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleTrick",
            "src": "contracts/levels/GatekeeperThree.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "password",
            "src": "contracts/levels/GatekeeperThree.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "target",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(GatekeeperThree)5495",
              "contract": "SimpleTrick",
              "src": "contracts/levels/GatekeeperThree.sol:5"
            },
            {
              "label": "trick",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SimpleTrick",
              "src": "contracts/levels/GatekeeperThree.sol:6"
            },
            {
              "label": "password",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SimpleTrick",
              "src": "contracts/levels/GatekeeperThree.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(GatekeeperThree)5495": {
              "label": "contract GatekeeperThree",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperThreeFactory.sol:GatekeeperThreeFactory": {
        "src": "contracts/levels/GatekeeperThreeFactory.sol:7",
        "version": {
          "withMetadata": "62b42351701bebefc76871a81dcfcce10e0fab82508ade5bca31d511ff33838e",
          "withoutMetadata": "80e9a85b3fc547e949630d8dc485cc19096b41506e385eea8bda044679ed06b6",
          "linkedWithoutMetadata": "80e9a85b3fc547e949630d8dc485cc19096b41506e385eea8bda044679ed06b6"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperTwo.sol:GatekeeperTwo": {
        "src": "contracts/levels/GatekeeperTwo.sol:4",
        "version": {
          "withMetadata": "e44263442eccf6496e4a2b559d9f05393ec677270756047a1778bc1d3325ade9",
          "withoutMetadata": "eeff762252f72602d7e353cfadb2ec8a823cb74e9368c841fd7429afdbbf15f3",
          "linkedWithoutMetadata": "eeff762252f72602d7e353cfadb2ec8a823cb74e9368c841fd7429afdbbf15f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "enter(bytes8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "entrant",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GatekeeperTwo",
              "src": "contracts/levels/GatekeeperTwo.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GatekeeperTwoFactory.sol:GatekeeperTwoFactory": {
        "src": "contracts/levels/GatekeeperTwoFactory.sol:8",
        "version": {
          "withMetadata": "41669300c8ea877d88243b769d47b9ca13fb4f19e2354bfcb336979fd9d6e3fc",
          "withoutMetadata": "6c03ec36a5f0231999e6553eff5052b32b2e2900cbc3ade049652ee819a165bc",
          "linkedWithoutMetadata": "6c03ec36a5f0231999e6553eff5052b32b2e2900cbc3ade049652ee819a165bc"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GoodSamaritan.sol:Coin": {
        "src": "contracts/levels/GoodSamaritan.sol:31",
        "version": {
          "withMetadata": "1f3bb941de0680a8c44fca9ffe9fa6116ed2459ff6d07ea523fd8c519e11824b",
          "withoutMetadata": "c17bcdd22376104c8435a992aa1728427d36846d8e0af1538c56af358e346415",
          "linkedWithoutMetadata": "c17bcdd22376104c8435a992aa1728427d36846d8e0af1538c56af358e346415"
        },
        "inherit": [],
        "libraries": [
          "openzeppelin-contracts-08/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Coin",
            "src": "contracts/levels/GoodSamaritan.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Coin",
              "src": "contracts/levels/GoodSamaritan.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GoodSamaritan.sol:GoodSamaritan": {
        "src": "contracts/levels/GoodSamaritan.sol:6",
        "version": {
          "withMetadata": "508d8367cca1a6b6740053a2c50df60bbfc8d2332eac200bbe33bcf6a74a4936",
          "withoutMetadata": "d746a87b05104ecee4c1915cf77dd8a3ebd89cf9510395659ffffe5343f68abf",
          "linkedWithoutMetadata": "d746a87b05104ecee4c1915cf77dd8a3ebd89cf9510395659ffffe5343f68abf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "requestDonation()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GoodSamaritan",
            "src": "contracts/levels/GoodSamaritan.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "wallet",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Wallet)5946",
              "contract": "GoodSamaritan",
              "src": "contracts/levels/GoodSamaritan.sol:7"
            },
            {
              "label": "coin",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Coin)5850",
              "contract": "GoodSamaritan",
              "src": "contracts/levels/GoodSamaritan.sol:8"
            }
          ],
          "types": {
            "t_contract(Coin)5850": {
              "label": "contract Coin",
              "numberOfBytes": "20"
            },
            "t_contract(Wallet)5946": {
              "label": "contract Wallet",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GoodSamaritan.sol:INotifyable": {
        "src": "contracts/levels/GoodSamaritan.sol:101",
        "inherit": [],
        "libraries": [],
        "methods": [
          "notify(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GoodSamaritan.sol:Wallet": {
        "src": "contracts/levels/GoodSamaritan.sol:61",
        "version": {
          "withMetadata": "9894f181fa51962105124c62fda467adec0596556881b952c7b7f60528288165",
          "withoutMetadata": "cd75f099ad5be0287a9796072489375b066e0b887f77d3bdd4ddfd1263eae9bc",
          "linkedWithoutMetadata": "cd75f099ad5be0287a9796072489375b066e0b887f77d3bdd4ddfd1263eae9bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "donate10(address)",
          "transferRemainder(address)",
          "setCoin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Wallet",
            "src": "contracts/levels/GoodSamaritan.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Wallet",
              "src": "contracts/levels/GoodSamaritan.sol:63"
            },
            {
              "label": "coin",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Coin)5850",
              "contract": "Wallet",
              "src": "contracts/levels/GoodSamaritan.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Coin)5850": {
              "label": "contract Coin",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/GoodSamaritanFactory.sol:GoodSamaritanFactory": {
        "src": "contracts/levels/GoodSamaritanFactory.sol:7",
        "version": {
          "withMetadata": "c99e74097722d0fb408f4abeddfba666e20523da5c5e162cf4cd6524256a841f",
          "withoutMetadata": "ecac3ec7b5fc16b4ac1b727faacfbe1554075777092c4db6f3a7ce9721805d99",
          "linkedWithoutMetadata": "ecac3ec7b5fc16b4ac1b727faacfbe1554075777092c4db6f3a7ce9721805d99"
        },
        "inherit": [
          "contracts/levels/base/Level-08.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Instance.sol:Instance": {
        "src": "contracts/levels/Instance.sol:4",
        "version": {
          "withMetadata": "4ea036d93fddd02e602d76fae808abc97e6539a75b7cd72fd808a870db8e7128",
          "withoutMetadata": "4ea036d93fddd02e602d76fae808abc97e6539a75b7cd72fd808a870db8e7128",
          "linkedWithoutMetadata": "4ea036d93fddd02e602d76fae808abc97e6539a75b7cd72fd808a870db8e7128"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(string)",
          "info()",
          "info1()",
          "info2(string)",
          "info42()",
          "method7123949()",
          "authenticate(string)",
          "getCleared()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Instance",
            "src": "contracts/levels/Instance.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "infoNum",
            "src": "contracts/levels/Instance.sol:7"
          },
          {
            "kind": "state-variable-assignment",
            "name": "theMethodName",
            "src": "contracts/levels/Instance.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "cleared",
            "src": "contracts/levels/Instance.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "password",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Instance",
              "src": "contracts/levels/Instance.sol:6"
            },
            {
              "label": "infoNum",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Instance",
              "src": "contracts/levels/Instance.sol:7"
            },
            {
              "label": "theMethodName",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Instance",
              "src": "contracts/levels/Instance.sol:8"
            },
            {
              "label": "cleared",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Instance",
              "src": "contracts/levels/Instance.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/InstanceFactory.sol:InstanceFactory": {
        "src": "contracts/levels/InstanceFactory.sol:8",
        "version": {
          "withMetadata": "8b8f43756db7f4d6d378b9bb8ef7f8c5305aee27d603465a352cc971335c00c5",
          "withoutMetadata": "4024bd94f91350ecfb8c976df812253c52d242065bcb3fea37905e11fa06d12d",
          "linkedWithoutMetadata": "4024bd94f91350ecfb8c976df812253c52d242065bcb3fea37905e11fa06d12d"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/King.sol:King": {
        "src": "contracts/levels/King.sol:4",
        "version": {
          "withMetadata": "2760f204023aef7fe2c2fed62e6e63e71a6420d5d492143247955ae0fa81c036",
          "withoutMetadata": "6ce5c213b5e7fe3c1e13d384b8b3ec767b329207089ffa33d5d3464768dfaa80",
          "linkedWithoutMetadata": "6ce5c213b5e7fe3c1e13d384b8b3ec767b329207089ffa33d5d3464768dfaa80"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "_king()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "King",
            "src": "contracts/levels/King.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "king",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "King",
              "src": "contracts/levels/King.sol:6"
            },
            {
              "label": "prize",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "King",
              "src": "contracts/levels/King.sol:7"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "King",
              "src": "contracts/levels/King.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/KingFactory.sol:KingFactory": {
        "src": "contracts/levels/KingFactory.sol:8",
        "version": {
          "withMetadata": "e2be57d854812122995b6804d95894011cfbb236278a59dc67af30b011e09299",
          "withoutMetadata": "fd6d65649848c5df68be5b20faae540b53479246231439734241d8f265948096",
          "linkedWithoutMetadata": "fd6d65649848c5df68be5b20faae540b53479246231439734241d8f265948096"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "insertCoin",
            "src": "contracts/levels/KingFactory.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "insertCoin",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "KingFactory",
              "src": "contracts/levels/KingFactory.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/MagicNum.sol:MagicNum": {
        "src": "contracts/levels/MagicNum.sol:4",
        "version": {
          "withMetadata": "b0c5561475a80b4730cb571292de5d9713a8069deae042e503105abafc5af43c",
          "withoutMetadata": "a51e8514fb4a0b597b74576af22561865a6abf27388471bcf8cfbb97473d89be",
          "linkedWithoutMetadata": "a51e8514fb4a0b597b74576af22561865a6abf27388471bcf8cfbb97473d89be"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setSolver(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "solver",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "MagicNum",
              "src": "contracts/levels/MagicNum.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/MagicNumFactory.sol:MagicNumFactory": {
        "src": "contracts/levels/MagicNumFactory.sol:12",
        "version": {
          "withMetadata": "a447d67c1478450347c4d633e938aba4cba6d3a8e0dd425740c5d822ec65affd",
          "withoutMetadata": "2013069ab85e016af36acb4d306177555b2513553ffe9cd7e7d4f26783b93693",
          "linkedWithoutMetadata": "2013069ab85e016af36acb4d306177555b2513553ffe9cd7e7d4f26783b93693"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/MagicNumFactory.sol:Solver": {
        "src": "contracts/levels/MagicNumFactory.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "whatIsTheMeaningOfLife()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/NaughtCoin.sol:NaughtCoin": {
        "src": "contracts/levels/NaughtCoin.sol:6",
        "version": {
          "withMetadata": "07cb2da6522db398a5344fadc6fc1ff5b13cc20e6dcbd58c697c70d38d9f35f5",
          "withoutMetadata": "07cb2da6522db398a5344fadc6fc1ff5b13cc20e6dcbd58c697c70d38d9f35f5",
          "linkedWithoutMetadata": "07cb2da6522db398a5344fadc6fc1ff5b13cc20e6dcbd58c697c70d38d9f35f5"
        },
        "inherit": [
          "openzeppelin-contracts-08/token/ERC20/ERC20.sol:ERC20",
          "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NaughtCoin",
            "src": "contracts/levels/NaughtCoin.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "timeLock",
            "src": "contracts/levels/NaughtCoin.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "timeLock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NaughtCoin",
              "src": "contracts/levels/NaughtCoin.sol:11"
            },
            {
              "label": "INITIAL_SUPPLY",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "NaughtCoin",
              "src": "contracts/levels/NaughtCoin.sol:12"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "NaughtCoin",
              "src": "contracts/levels/NaughtCoin.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/NaughtCoinFactory.sol:NaughtCoinFactory": {
        "src": "contracts/levels/NaughtCoinFactory.sol:8",
        "version": {
          "withMetadata": "03f5b4c2fe5e8c594901d648417fea13ab07984cd78f05117aeffec3f0e9684c",
          "withoutMetadata": "a162333f6d657ac10a17deb8d23251200c3e7eca28eaed3714241578aedadf28",
          "linkedWithoutMetadata": "a162333f6d657ac10a17deb8d23251200c3e7eca28eaed3714241578aedadf28"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Preservation.sol:LibraryContract": {
        "src": "contracts/levels/Preservation.sol:32",
        "version": {
          "withMetadata": "c73318741e638cf4472edd451b793caf3c1e32724acd6d52bce0d8dc41138e57",
          "withoutMetadata": "537dea60844cd9dd98f3ef57fd8bc01f8ffe131caa3b8901d66d1b0a4270c995",
          "linkedWithoutMetadata": "537dea60844cd9dd98f3ef57fd8bc01f8ffe131caa3b8901d66d1b0a4270c995"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "storedTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "LibraryContract",
              "src": "contracts/levels/Preservation.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Preservation.sol:Preservation": {
        "src": "contracts/levels/Preservation.sol:4",
        "version": {
          "withMetadata": "4ffcbfd27eb7dcede2f20686e5a110ec56cb66467edfd8149bacc16e722c0671",
          "withoutMetadata": "e9a29411abcff28a50a3a81360d27c1eb0ad4c850b2a56f2920726e39971d956",
          "linkedWithoutMetadata": "e9a29411abcff28a50a3a81360d27c1eb0ad4c850b2a56f2920726e39971d956"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setFirstTime(uint256)",
          "setSecondTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Preservation",
            "src": "contracts/levels/Preservation.sol:14"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/levels/Preservation.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/levels/Preservation.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeZone1Library",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Preservation",
              "src": "contracts/levels/Preservation.sol:7"
            },
            {
              "label": "timeZone2Library",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Preservation",
              "src": "contracts/levels/Preservation.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Preservation",
              "src": "contracts/levels/Preservation.sol:9"
            },
            {
              "label": "storedTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Preservation",
              "src": "contracts/levels/Preservation.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/PreservationFactory.sol:PreservationFactory": {
        "src": "contracts/levels/PreservationFactory.sol:8",
        "version": {
          "withMetadata": "9ecb9be9416cb01e161cac05090a3318fed4ae78f6805455e12ac7415953770b",
          "withoutMetadata": "ee19cb10d9038faaef4820d436d8ef1781588e7373723fe985e49883bcd33631",
          "linkedWithoutMetadata": "ee19cb10d9038faaef4820d436d8ef1781588e7373723fe985e49883bcd33631"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreservationFactory",
            "src": "contracts/levels/PreservationFactory.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "timeZone1LibraryAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PreservationFactory",
              "src": "contracts/levels/PreservationFactory.sol:10"
            },
            {
              "label": "timeZone2LibraryAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PreservationFactory",
              "src": "contracts/levels/PreservationFactory.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Privacy.sol:Privacy": {
        "src": "contracts/levels/Privacy.sol:4",
        "version": {
          "withMetadata": "311354bd6326d215f1dfbc432284582aac219b8712e1162b79312d5a8738b135",
          "withoutMetadata": "54085d85743a43584695494188885044e6c3d838027d7c2e76b5dbb6e89c3d9f",
          "linkedWithoutMetadata": "54085d85743a43584695494188885044e6c3d838027d7c2e76b5dbb6e89c3d9f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(bytes32[3])",
          "unlock(bytes16)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Privacy",
            "src": "contracts/levels/Privacy.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/levels/Privacy.sol:6"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ID",
            "src": "contracts/levels/Privacy.sol:7"
          },
          {
            "kind": "state-variable-assignment",
            "name": "flattening",
            "src": "contracts/levels/Privacy.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "denomination",
            "src": "contracts/levels/Privacy.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "awkwardness",
            "src": "contracts/levels/Privacy.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Privacy",
              "src": "contracts/levels/Privacy.sol:6"
            },
            {
              "label": "ID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Privacy",
              "src": "contracts/levels/Privacy.sol:7"
            },
            {
              "label": "flattening",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "Privacy",
              "src": "contracts/levels/Privacy.sol:8"
            },
            {
              "label": "denomination",
              "offset": 1,
              "slot": "2",
              "type": "t_uint8",
              "contract": "Privacy",
              "src": "contracts/levels/Privacy.sol:9"
            },
            {
              "label": "awkwardness",
              "offset": 2,
              "slot": "2",
              "type": "t_uint16",
              "contract": "Privacy",
              "src": "contracts/levels/Privacy.sol:10"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_bytes32)3_storage",
              "contract": "Privacy",
              "src": "contracts/levels/Privacy.sol:11"
            }
          ],
          "types": {
            "t_array(t_bytes32)3_storage": {
              "label": "bytes32[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/PrivacyFactory.sol:PrivacyFactory": {
        "src": "contracts/levels/PrivacyFactory.sol:8",
        "version": {
          "withMetadata": "d1ca21b416b20077354295fc91ed7a3066273ae6fcbd80a0a31273350951d054",
          "withoutMetadata": "6bec6c0345364f7d547bb41812a637a574f0d683da0a07ff4c02f66d433becde",
          "linkedWithoutMetadata": "6bec6c0345364f7d547bb41812a637a574f0d683da0a07ff4c02f66d433becde"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/PuzzleWallet.sol:PuzzleProxy": {
        "src": "contracts/levels/PuzzleWallet.sol:7",
        "version": {
          "withMetadata": "e6dd85e41bebcbaeb50613c66538baef43b35206de5905457af6c6efd73a89fb",
          "withoutMetadata": "e6dd85e41bebcbaeb50613c66538baef43b35206de5905457af6c6efd73a89fb",
          "linkedWithoutMetadata": "e6dd85e41bebcbaeb50613c66538baef43b35206de5905457af6c6efd73a89fb"
        },
        "inherit": [
          "contracts/helpers/UpgradeableProxy-08.sol:UpgradeableProxy",
          "openzeppelin-contracts-08/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "proposeNewAdmin(address)",
          "approveNewAdmin(address)",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuzzleProxy",
            "src": "contracts/levels/PuzzleWallet.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pendingAdmin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PuzzleProxy",
              "src": "contracts/levels/PuzzleWallet.sol:8"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PuzzleProxy",
              "src": "contracts/levels/PuzzleWallet.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/PuzzleWallet.sol:PuzzleWallet": {
        "src": "contracts/levels/PuzzleWallet.sol:34",
        "version": {
          "withMetadata": "d6d4afa99a0f23e88c133045c53b6777cb3e8b717aa0eda6624e5ed87c9bf05e",
          "withoutMetadata": "82b4a1c5f4b8eb33c7e685e7839f4f63941958b95241089988213d5a8d28834c",
          "linkedWithoutMetadata": "82b4a1c5f4b8eb33c7e685e7839f4f63941958b95241089988213d5a8d28834c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "init(uint256)",
          "setMaxBalance(uint256)",
          "addToWhitelist(address)",
          "deposit()",
          "execute(address,uint256,bytes)",
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/levels/PuzzleWallet.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PuzzleWallet",
              "src": "contracts/levels/PuzzleWallet.sol:35"
            },
            {
              "label": "maxBalance",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "PuzzleWallet",
              "src": "contracts/levels/PuzzleWallet.sol:36"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PuzzleWallet",
              "src": "contracts/levels/PuzzleWallet.sol:37"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuzzleWallet",
              "src": "contracts/levels/PuzzleWallet.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/PuzzleWalletFactory.sol:PuzzleWalletFactory": {
        "src": "contracts/levels/PuzzleWalletFactory.sol:8",
        "version": {
          "withMetadata": "7db75e81daf1b1edf376142dbbc698687c150862fa38706a6575601162de46d9",
          "withoutMetadata": "ea33c2afc6a4a0aa155538a7cb765afb9605a7569f7aa7565b7a030f9461d835",
          "linkedWithoutMetadata": "ea33c2afc6a4a0aa155538a7cb765afb9605a7569f7aa7565b7a030f9461d835"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Recovery.sol:Recovery": {
        "src": "contracts/levels/Recovery.sol:4",
        "version": {
          "withMetadata": "17a4ce03751e764e24c9a0d88f07149c631bac2bb9b9faa6431cb71610dc30bd",
          "withoutMetadata": "81fc3b337cbc876e3d512fc979344c0cdc6af9e646bb520d3b3a11efa44231c3",
          "linkedWithoutMetadata": "81fc3b337cbc876e3d512fc979344c0cdc6af9e646bb520d3b3a11efa44231c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "generateToken(string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Recovery.sol:SimpleToken": {
        "src": "contracts/levels/Recovery.sol:13",
        "version": {
          "withMetadata": "00e07a8c7c815383f2d6ded37cb29bf1b051b54bfe993d0a1c1e49e27508c286",
          "withoutMetadata": "5f5ae54f5eee46206e91a78647a8f4cf60477cd45748fcbe691b4410e13c4b0d",
          "linkedWithoutMetadata": "5f5ae54f5eee46206e91a78647a8f4cf60477cd45748fcbe691b4410e13c4b0d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(string,address,uint256)",
          "()",
          "transfer(address,uint256)",
          "destroy(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleToken",
            "src": "contracts/levels/Recovery.sol:19"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/levels/Recovery.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "SimpleToken",
              "src": "contracts/levels/Recovery.sol:15"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SimpleToken",
              "src": "contracts/levels/Recovery.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/RecoveryFactory.sol:RecoveryFactory": {
        "src": "contracts/levels/RecoveryFactory.sol:8",
        "version": {
          "withMetadata": "87ab521f896e35b50da011c1bcf7b4e40c137f1038d79748fd142ff54b829553",
          "withoutMetadata": "579215ac8a66af373a07a0e530d2075a08db5b5654af1a742008dba0d78290a9",
          "linkedWithoutMetadata": "579215ac8a66af373a07a0e530d2075a08db5b5654af1a742008dba0d78290a9"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            },
            {
              "label": "lostAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "RecoveryFactory",
              "src": "contracts/levels/RecoveryFactory.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/RecoverySimpleToken.sol:RecoverySimpleToken": {
        "src": "contracts/levels/RecoverySimpleToken.sol:4",
        "version": {
          "withMetadata": "ad20c993d6a608d6ba2b1cafe7e09f7e2d3d9ccbb519601d4315e61c349f9c58",
          "withoutMetadata": "c697f049662ddb563c0dd9ef5187ce43f142d22793e8346b7c4227de621385ab",
          "linkedWithoutMetadata": "c697f049662ddb563c0dd9ef5187ce43f142d22793e8346b7c4227de621385ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(string,address,uint256)",
          "()",
          "transfer(address,uint256)",
          "destroy(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RecoverySimpleToken",
            "src": "contracts/levels/RecoverySimpleToken.sol:11"
          },
          {
            "kind": "selfdestruct",
            "src": "contracts/levels/RecoverySimpleToken.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "RecoverySimpleToken",
              "src": "contracts/levels/RecoverySimpleToken.sol:7"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RecoverySimpleToken",
              "src": "contracts/levels/RecoverySimpleToken.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Shop.sol:Buyer": {
        "src": "contracts/levels/Shop.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Shop.sol:Shop": {
        "src": "contracts/levels/Shop.sol:8",
        "version": {
          "withMetadata": "7463d42b7f130aeccfa24b290d93378a3a42797524ec02a26869bc7df520c1be",
          "withoutMetadata": "a06f25faa675cde92b2f230442abc1b46362fd7840913a438c6f0c8bd1b50d84",
          "linkedWithoutMetadata": "a06f25faa675cde92b2f230442abc1b46362fd7840913a438c6f0c8bd1b50d84"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "buy()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "price",
            "src": "contracts/levels/Shop.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Shop",
              "src": "contracts/levels/Shop.sol:9"
            },
            {
              "label": "isSold",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "Shop",
              "src": "contracts/levels/Shop.sol:10"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/ShopFactory.sol:ShopFactory": {
        "src": "contracts/levels/ShopFactory.sol:8",
        "version": {
          "withMetadata": "693f077e2410232ce227eab32266d018923424897b0db15e55816a02d5349b55",
          "withoutMetadata": "13b77694a75db746abf2fc98d35bf72eba05f6ac070f18309bc8a6ffeb577014",
          "linkedWithoutMetadata": "13b77694a75db746abf2fc98d35bf72eba05f6ac070f18309bc8a6ffeb577014"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Telephone.sol:Telephone": {
        "src": "contracts/levels/Telephone.sol:4",
        "version": {
          "withMetadata": "e06b2f387fd751ee74a9bd6c0b9eaf64c64060e7036a9e4d74aaec43b7f30304",
          "withoutMetadata": "065eaddc1d1f6d981b1bf8a43d2ed5a63b4d913b6dc99ab40ac3ac5303a2a339",
          "linkedWithoutMetadata": "065eaddc1d1f6d981b1bf8a43d2ed5a63b4d913b6dc99ab40ac3ac5303a2a339"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Telephone",
            "src": "contracts/levels/Telephone.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Telephone",
              "src": "contracts/levels/Telephone.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/TelephoneFactory.sol:TelephoneFactory": {
        "src": "contracts/levels/TelephoneFactory.sol:8",
        "version": {
          "withMetadata": "c3472105fe8fe20e4837e64bd36531c0838e22fc3a4d66215b9a0f3dc9e64b42",
          "withoutMetadata": "f5b2a27cd79332b3406bbc05b5b4277bd8fca410da78c23036e828c74ff2f350",
          "linkedWithoutMetadata": "f5b2a27cd79332b3406bbc05b5b4277bd8fca410da78c23036e828c74ff2f350"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/Vault.sol:Vault": {
        "src": "contracts/levels/Vault.sol:4",
        "version": {
          "withMetadata": "0c671e5900f1c47a9abac0c6d7c203fda8af508f91572af2a270fd0566dec656",
          "withoutMetadata": "71a98b057b37e6975ebb2154cd31039ad736a445f9cf0d02a82cefed2e7f05d5",
          "linkedWithoutMetadata": "71a98b057b37e6975ebb2154cd31039ad736a445f9cf0d02a82cefed2e7f05d5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(bytes32)",
          "unlock(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Vault",
            "src": "contracts/levels/Vault.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Vault",
              "src": "contracts/levels/Vault.sol:5"
            },
            {
              "label": "password",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "Vault",
              "src": "contracts/levels/Vault.sol:6"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/VaultFactory.sol:VaultFactory": {
        "src": "contracts/levels/VaultFactory.sol:8",
        "version": {
          "withMetadata": "dd7efa9c5d689ce6ecd23e8b15cfa8bcc60d46dec63810b32377888b29f16add",
          "withoutMetadata": "3d5a9f6d970ee0aaf8a287734e46eab6f598d5aca3eac8f32cd7fc4b761c8427",
          "linkedWithoutMetadata": "3d5a9f6d970ee0aaf8a287734e46eab6f598d5aca3eac8f32cd7fc4b761c8427"
        },
        "inherit": [
          "contracts/levels/base/Level.sol:Level",
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/base/Level-08.sol:Level": {
        "src": "contracts/levels/base/Level-08.sol:7",
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/levels/base/Level.sol:Level": {
        "src": "contracts/levels/base/Level.sol:7",
        "inherit": [
          "openzeppelin-contracts-08/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/metrics/Statistics.sol:Statistics": {
        "src": "contracts/metrics/Statistics.sol:4",
        "version": {
          "withMetadata": "655b2d5d4973bf67d00caf3b37e8956256a361d1ed12ab34b0ac4062908868bf",
          "withoutMetadata": "baa12118c139b3993c3b761e003e2ab8d59ebe8e65cc4113cb20fcc4e20f6285",
          "linkedWithoutMetadata": "baa12118c139b3993c3b761e003e2ab8d59ebe8e65cc4113cb20fcc4e20f6285"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "createNewInstance(address,address,address)",
          "submitSuccess(address,address,address)",
          "submitFailure(address,address,address)",
          "saveNewLevel(address)",
          "getTotalNoOfLevelInstancesCreatedByPlayer(address)",
          "getTotalNoOfLevelInstancesCompletedByPlayer(address)",
          "getTotalNoOfFailedSubmissionsByPlayer(address)",
          "getTotalNoOfLevelsCompletedByPlayer(address)",
          "getTotalNoOfFailuresForLevelAndPlayer(address,address)",
          "isLevelCompleted(address,address)",
          "getTimeElapsedForCompletionOfLevel(address,address)",
          "getSubmissionsForLevelByPlayer(address,address,uint256)",
          "getPercentageOfLevelsCompleted(address)",
          "getTotalNoOfLevelInstancesCreated()",
          "getTotalNoOfLevelInstancesCompleted()",
          "getTotalNoOfFailedSubmissions()",
          "getTotalNoOfPlayers()",
          "getNoOfFailedSubmissionsForLevel(address)",
          "getNoOfInstancesForLevel(address)",
          "getNoOfCompletedSubmissionsForLevel(address)",
          "doesLevelExist(address)",
          "doesPlayerExist(address)",
          "getTotalNoOfEthernautLevels()",
          "getAverageTimeTakenToCompleteLevels(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "ethernaut",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:5"
            },
            {
              "label": "players",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:6"
            },
            {
              "label": "levels",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:7"
            },
            {
              "label": "globalNoOfInstancesCreated",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:8"
            },
            {
              "label": "globalNoOfInstancesCompleted",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:9"
            },
            {
              "label": "globalNoOfFailedSubmissions",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:10"
            },
            {
              "label": "globalNoOfLevelsCompletedByPlayer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:23"
            },
            {
              "label": "globalNoOfInstancesCreatedByPlayer",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:24"
            },
            {
              "label": "globalNoOfInstancesCompletedByPlayer",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:25"
            },
            {
              "label": "globalNoOfFailedSubmissionsByPlayer",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:26"
            },
            {
              "label": "levelStats",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Level)8024_storage)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:27"
            },
            {
              "label": "levelFirstInstanceCreationTime",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:28"
            },
            {
              "label": "levelFirstCompletionTime",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:29"
            },
            {
              "label": "playerStats",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(LevelInstance)8017_storage))",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:30"
            },
            {
              "label": "playerExists",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:31"
            },
            {
              "label": "levelExists",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:32"
            },
            {
              "label": "averageTimeTakenToCompleteLevels",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_uint256)44_storage",
              "contract": "Statistics",
              "src": "contracts/metrics/Statistics.sol:326"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(LevelInstance)8017_storage))": {
              "label": "mapping(address => mapping(address => struct Statistics.LevelInstance))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Level)8024_storage)": {
              "label": "mapping(address => struct Statistics.Level)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LevelInstance)8017_storage)": {
              "label": "mapping(address => struct Statistics.LevelInstance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Level)8024_storage": {
              "label": "struct Statistics.Level",
              "members": [
                {
                  "label": "noOfInstancesCreated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "noOfInstancesSubmitted_Success",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "noOfSubmissions_Failed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(LevelInstance)8017_storage": {
              "label": "struct Statistics.LevelInstance",
              "members": [
                {
                  "label": "instance",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isCompleted",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "timeCreated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timeCompleted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "timeSubmitted",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/proxy/ProxyAdmin.sol:ProxyAdmin": {
        "src": "contracts/proxy/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "99f6c913c3cdf2c16a8ecc9a721f01761d78cedf0ffbd8c76ccb8f5900150e40",
          "withoutMetadata": "ca8f18d1f91407714370faeb244c3d5c75e73a9d80860f11d9fe6e04a6142ebe",
          "linkedWithoutMetadata": "ca8f18d1f91407714370faeb244c3d5c75e73a9d80860f11d9fe6e04a6142ebe"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "contracts/proxy/ProxyStats.sol:ProxyStats": {
        "src": "contracts/proxy/ProxyStats.sol:5",
        "version": {
          "withMetadata": "a029013631b2e2b023df27986abfc47aa00b111b451a5908948606a86e072fae",
          "withoutMetadata": "a029013631b2e2b023df27986abfc47aa00b111b451a5908948606a86e072fae",
          "linkedWithoutMetadata": "a029013631b2e2b023df27986abfc47aa00b111b451a5908948606a86e072fae"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyStats",
            "src": "contracts/proxy/ProxyStats.sol:6"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/access/Ownable.sol:Ownable": {
        "src": "openzeppelin-contracts-08/access/Ownable.sol:20",
        "inherit": [
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "openzeppelin-contracts-08/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-08/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/proxy/Proxy.sol:Proxy": {
        "src": "openzeppelin-contracts-08/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/token/ERC20/ERC20.sol:ERC20": {
        "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "cb92876ac18b6afdbd894860c0b4b7f59ed33d303ca828eca5684908c3e38048",
          "withoutMetadata": "57931a7443d4193cee69dd61b3d81eee16f677161f872c93f7d6ab2d8b185d2e",
          "linkedWithoutMetadata": "57931a7443d4193cee69dd61b3d81eee16f677161f872c93f7d6ab2d8b185d2e"
        },
        "inherit": [
          "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20",
          "openzeppelin-contracts-08/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "openzeppelin-contracts-08/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20": {
        "src": "openzeppelin-contracts-08/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "openzeppelin-contracts-08/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "openzeppelin-contracts-08/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/utils/Address.sol:Address": {
        "src": "openzeppelin-contracts-08/utils/Address.sol:9",
        "version": {
          "withMetadata": "0cbbaef5966d126f9d1a388e86304a00451ec3cb9e0dfbe3bb6134beb1442d3e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "openzeppelin-contracts-08/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      },
      "openzeppelin-contracts-08/utils/Context.sol:Context": {
        "src": "openzeppelin-contracts-08/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.12"
      }
    },
    {
      "contracts/attacks/MotorbikeAttack.sol:Exploit": {
        "src": "contracts/attacks/MotorbikeAttack.sol:42",
        "version": {
          "withMetadata": "52ea511391a0b6147475e5edbdadfa84560d69b4c1f6975c2b4da46c1fff3b6f",
          "withoutMetadata": "3c42da4813a8ad01551b146bf4402a98ef33c9e89cf83acd6390a742c6615509",
          "linkedWithoutMetadata": "3c42da4813a8ad01551b146bf4402a98ef33c9e89cf83acd6390a742c6615509"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/attacks/MotorbikeAttack.sol:45"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.6.12"
      },
      "contracts/attacks/MotorbikeAttack.sol:MotorbikeAttack": {
        "src": "contracts/attacks/MotorbikeAttack.sol:7",
        "version": {
          "withMetadata": "8dcbd9417406aaa71b3158cf3d89b667f7fba0a212eb52ec5528795ab72e57b2",
          "withoutMetadata": "35b3970888d464f1f0c8cc6633e27ca3763cb78a37faf41220d5b85e1dfee242",
          "linkedWithoutMetadata": "35b3970888d464f1f0c8cc6633e27ca3763cb78a37faf41220d5b85e1dfee242"
        },
        "inherit": [],
        "libraries": [
          "openzeppelin-contracts-06/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "takeControl()",
          "destroy()",
          "validateItIsBroken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MotorbikeAttack",
            "src": "contracts/attacks/MotorbikeAttack.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "MotorbikeAttack",
              "src": "contracts/attacks/MotorbikeAttack.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/attacks/ReentranceAttack.sol:ReentranceAttack": {
        "src": "contracts/attacks/ReentranceAttack.sol:7",
        "version": {
          "withMetadata": "05b11e98deacb12593803fde2121a0fecc476e108a557e5cd1a563b00f0864cf",
          "withoutMetadata": "f47b977634d408e51c9775ccd58fe836c1eb24b089a275f17c743b0ecdaf75c9",
          "linkedWithoutMetadata": "f47b977634d408e51c9775ccd58fe836c1eb24b089a275f17c743b0ecdaf75c9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "attack_1_causeOverflow()",
          "attack_2_deplete()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentranceAttack",
            "src": "contracts/attacks/ReentranceAttack.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "target",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(Reentrance)706",
              "contract": "ReentranceAttack",
              "src": "contracts/attacks/ReentranceAttack.sol:9"
            }
          ],
          "types": {
            "t_contract(Reentrance)706": {
              "label": "contract Reentrance",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/Fallout.sol:Fallout": {
        "src": "contracts/levels/Fallout.sol:6",
        "version": {
          "withMetadata": "3c98b1b601f7e78cf04e63668378806fdd9376e114596ed56cda5ec4f71c9ffb",
          "withoutMetadata": "95c6021745dfe0f89d218ac71cc909a2af69ef4cb0b3ccbc4f19be3cf17b1429",
          "linkedWithoutMetadata": "95c6021745dfe0f89d218ac71cc909a2af69ef4cb0b3ccbc4f19be3cf17b1429"
        },
        "inherit": [],
        "libraries": [
          "openzeppelin-contracts-06/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "Fal1out()",
          "allocate()",
          "sendAllocation(address payable)",
          "collectAllocations()",
          "allocatorBalance(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allocations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Fallout",
              "src": "contracts/levels/Fallout.sol:9"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Fallout",
              "src": "contracts/levels/Fallout.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/FalloutFactory.sol:FalloutFactory": {
        "src": "contracts/levels/FalloutFactory.sol:8",
        "version": {
          "withMetadata": "b133dcc568b8d9143ab9be6f7696c316ab234675b0ac15196dfb77591f9a68eb",
          "withoutMetadata": "5a1a92f2f4070ea26647a10e64645fd6dde9717dc46fe55939e98de61d3eece5",
          "linkedWithoutMetadata": "5a1a92f2f4070ea26647a10e64645fd6dde9717dc46fe55939e98de61d3eece5"
        },
        "inherit": [
          "contracts/levels/base/Level-06.sol:Level",
          "openzeppelin-contracts-06/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-06/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-06/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/Motorbike.sol:Engine": {
        "src": "contracts/levels/Motorbike.sol:53",
        "version": {
          "withMetadata": "c3f1a4004268f4edb672a1729c2d0624098b7b8116fba7eef4943c6c650a1796",
          "withoutMetadata": "a9a31b452bc330c8925235305880d32894e37e95cf81f228ebf193adaf98122c",
          "linkedWithoutMetadata": "a9a31b452bc330c8925235305880d32894e37e95cf81f228ebf193adaf98122c"
        },
        "inherit": [
          "openzeppelin-contracts-06/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "openzeppelin-contracts-06/utils/Address.sol:Address"
        ],
        "methods": [
          "initialize()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/levels/Motorbike.sol:89"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "openzeppelin-contracts-06/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "openzeppelin-contracts-06/proxy/Initializable.sol:30"
            },
            {
              "label": "upgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "Engine",
              "src": "contracts/levels/Motorbike.sol:57"
            },
            {
              "label": "horsePower",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Engine",
              "src": "contracts/levels/Motorbike.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/Motorbike.sol:Motorbike": {
        "src": "contracts/levels/Motorbike.sol:8",
        "version": {
          "withMetadata": "bd17b3e61ae9986b9efaf0d0da0515edc4bc0db772c1b3bc91e0c2083804fb66",
          "withoutMetadata": "bd17b3e61ae9986b9efaf0d0da0515edc4bc0db772c1b3bc91e0c2083804fb66",
          "linkedWithoutMetadata": "bd17b3e61ae9986b9efaf0d0da0515edc4bc0db772c1b3bc91e0c2083804fb66"
        },
        "inherit": [],
        "libraries": [
          "openzeppelin-contracts-06/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Motorbike",
            "src": "contracts/levels/Motorbike.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/levels/Motorbike.sol:20"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/MotorbikeFactory.sol:MotorbikeFactory": {
        "src": "contracts/levels/MotorbikeFactory.sol:9",
        "version": {
          "withMetadata": "de11ac7800aa22e2ba1153b139b2b2fce4566b7c04a75e40b4354787e3c05779",
          "withoutMetadata": "b0bf642290bab28ca4f9375ffc6bf355cdf1c1e8985c885bb22a58fa71390e31",
          "linkedWithoutMetadata": "b0bf642290bab28ca4f9375ffc6bf355cdf1c1e8985c885bb22a58fa71390e31"
        },
        "inherit": [
          "contracts/levels/base/Level-06.sol:Level",
          "openzeppelin-contracts-06/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-06/utils/Context.sol:Context"
        ],
        "libraries": [
          "openzeppelin-contracts-06/utils/Address.sol:Address"
        ],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-06/access/Ownable.sol:19"
            },
            {
              "label": "engines",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "MotorbikeFactory",
              "src": "contracts/levels/MotorbikeFactory.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/Reentrance.sol:Reentrance": {
        "src": "contracts/levels/Reentrance.sol:6",
        "version": {
          "withMetadata": "e6ee29eabaa3f1ea719657dd57c5a2ada5d822e61d1e0e28a82a3d8b1424425b",
          "withoutMetadata": "ba75519e4867c0d726d40dcc623bc1e9d3cd6235dbe3a6d076c8de294fd5ab81",
          "linkedWithoutMetadata": "ba75519e4867c0d726d40dcc623bc1e9d3cd6235dbe3a6d076c8de294fd5ab81"
        },
        "inherit": [],
        "libraries": [
          "openzeppelin-contracts-06/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "donate(address)",
          "balanceOf(address)",
          "withdraw(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Reentrance",
              "src": "contracts/levels/Reentrance.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/ReentranceFactory.sol:ReentranceFactory": {
        "src": "contracts/levels/ReentranceFactory.sol:8",
        "version": {
          "withMetadata": "1fdf9864083a382fb3aec31133a182699729119bc08dc24f7836bc5bc02f7c8c",
          "withoutMetadata": "acb986ad75d2682a669c2dd6c7a6cac1ea456ae16890ddcfc12b9e804971c91e",
          "linkedWithoutMetadata": "acb986ad75d2682a669c2dd6c7a6cac1ea456ae16890ddcfc12b9e804971c91e"
        },
        "inherit": [
          "contracts/levels/base/Level-06.sol:Level",
          "openzeppelin-contracts-06/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-06/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "insertCoin",
            "src": "contracts/levels/ReentranceFactory.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-06/access/Ownable.sol:19"
            },
            {
              "label": "insertCoin",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentranceFactory",
              "src": "contracts/levels/ReentranceFactory.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/Token.sol:Token": {
        "src": "contracts/levels/Token.sol:4",
        "version": {
          "withMetadata": "28cddd6f7a0bdb151e3ed1f1a9c23b8042cdabac8b849ba9ac40757ed007be40",
          "withoutMetadata": "c9bf672464a71073e8dd1a02766ee94d2f5e31efb12915eb89c9cb66e41b2056",
          "linkedWithoutMetadata": "c9bf672464a71073e8dd1a02766ee94d2f5e31efb12915eb89c9cb66e41b2056"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/levels/Token.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts/levels/Token.sol:6"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/levels/Token.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/TokenFactory.sol:TokenFactory": {
        "src": "contracts/levels/TokenFactory.sol:8",
        "version": {
          "withMetadata": "e85d9785d6a73b137fa34d76329e40667aa01256edeb58c349a03d86dda7d573",
          "withoutMetadata": "1aee77e995b9bbc42365ddc8236b031d734fe0db061986016fab6241fe7cb169",
          "linkedWithoutMetadata": "1aee77e995b9bbc42365ddc8236b031d734fe0db061986016fab6241fe7cb169"
        },
        "inherit": [
          "contracts/levels/base/Level-06.sol:Level",
          "openzeppelin-contracts-06/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-06/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "supply",
            "src": "contracts/levels/TokenFactory.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerSupply",
            "src": "contracts/levels/TokenFactory.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-06/access/Ownable.sol:19"
            },
            {
              "label": "supply",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TokenFactory",
              "src": "contracts/levels/TokenFactory.sol:10"
            },
            {
              "label": "playerSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenFactory",
              "src": "contracts/levels/TokenFactory.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "contracts/levels/base/Level-06.sol:Level": {
        "src": "contracts/levels/base/Level-06.sol:7",
        "inherit": [
          "openzeppelin-contracts-06/access/Ownable.sol:Ownable",
          "openzeppelin-contracts-06/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-06/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "openzeppelin-contracts-06/access/Ownable.sol:Ownable": {
        "src": "openzeppelin-contracts-06/access/Ownable.sol:18",
        "inherit": [
          "openzeppelin-contracts-06/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "openzeppelin-contracts-06/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "openzeppelin-contracts-06/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "openzeppelin-contracts-06/math/SafeMath.sol:SafeMath": {
        "src": "openzeppelin-contracts-06/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "435c5cf89ffaa7b136fe3512333228dc106d9205976437c1d53b22923038cfc2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.6.12"
      },
      "openzeppelin-contracts-06/proxy/Initializable.sol:Initializable": {
        "src": "openzeppelin-contracts-06/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "openzeppelin-contracts-06/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "openzeppelin-contracts-06/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "openzeppelin-contracts-06/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.6.12"
      },
      "openzeppelin-contracts-06/utils/Address.sol:Address": {
        "src": "openzeppelin-contracts-06/utils/Address.sol:8",
        "version": {
          "withMetadata": "4389dbd05751666fdf93585a296811565d63016e86c0219a1fe085e7142912c1",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "openzeppelin-contracts-06/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.6.12"
      },
      "openzeppelin-contracts-06/utils/Context.sol:Context": {
        "src": "openzeppelin-contracts-06/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/helpers/Ownable-05.sol:Ownable": {
        "src": "contracts/helpers/Ownable-05.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/helpers/Ownable-05.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/helpers/Ownable-05.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.5.3"
      },
      "contracts/levels/AlienCodex.sol:AlienCodex": {
        "src": "contracts/levels/AlienCodex.sol:6",
        "version": {
          "withMetadata": "89569b3e51515470570f678245a29582733c62136ac3b1402aaae32033f2cefc",
          "withoutMetadata": "9de57e83701a169bfcbf0541b0d5f85659a5cf1f06e75aa85b08f9774d4c09e2",
          "linkedWithoutMetadata": "9de57e83701a169bfcbf0541b0d5f85659a5cf1f06e75aa85b08f9774d4c09e2"
        },
        "inherit": [
          "contracts/helpers/Ownable-05.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "make_contact()",
          "record(bytes32)",
          "retract()",
          "revise(uint256,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AlienCodex",
              "label": "contact",
              "type": "t_bool",
              "src": "contracts/levels/AlienCodex.sol:8"
            },
            {
              "contract": "AlienCodex",
              "label": "codex",
              "type": "t_array(t_bytes32)dyn_storage",
              "src": "contracts/levels/AlienCodex.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.5.3"
      },
      "contracts/levels/AlienCodexFactory.sol:AlienCodexFactory": {
        "src": "contracts/levels/AlienCodexFactory.sol:8",
        "version": {
          "withMetadata": "7961cc69f7301f49a31be9a96b58af3378afa14300b6976b8ba62ca04c6bd367",
          "withoutMetadata": "234b81a210f12924336ecf5f9ee9086f13aefc000359d720cfa2fc4a49895404",
          "linkedWithoutMetadata": "234b81a210f12924336ecf5f9ee9086f13aefc000359d720cfa2fc4a49895404"
        },
        "inherit": [
          "contracts/levels/base/Level-05.sol:Level",
          "contracts/helpers/Ownable-05.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.5.3"
      },
      "contracts/levels/base/Level-05.sol:Level": {
        "src": "contracts/levels/base/Level-05.sol:7",
        "inherit": [
          "contracts/helpers/Ownable-05.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "createInstance(address)",
          "validateInstance(address payable,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.5.3"
      }
    }
  ]
}